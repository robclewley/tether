#labels Phase-Deploy
#Running MoonPy on osX

= Why MoonPy has issues on osX =
osX 10.5.x (leopard) comes with python2.5 automatically installed. Unfortunately the location where this version of python is installed is not the default location most python library installers look for python. Currently, both the most recent Pygame and PIL osX installers run into this problem. Although there are more efficient ways for people to work around this we have listed instructions below on the easiest way to get MoonPy to run on osX.



= Quick and easy steps for running MoonPy on osX =
First of all download and install python2.5 for osX using the python2.5 installer. Then install Pygame, PIL, and then PyobjC in that specific order. We offer all these files on our downloads page [http://code.google.com/p/tether/downloads/list here]. Once done run moon_localpy.py instead of the regular moon.py application. 



= Downsides to the quick and easy steps =
Specifically what the previous steps do is install a 2nd version of python2.5 then installs the dependencies into the library folders of this version of python. This means that you will have 2 versions of python2.5 on your system, the original version and a new version with all the dependencies installed. PyobjC is also pre-installed with the built-in version of python2.5 but is not automatically installed with the 2nd version and so it to becomes 'copied'. Although these systems aren't very large it does result in redundant programs/libraries installed on your computer and is a waste of hard drive space. Your osX will by default still want to launch python programs with the built-in version of python and not see the dependencies we installed. This is the reason for the moon_localpy.py file. Moon.Py attempts to run the default version of python2.5, moon_localpy.py specifically runs the version of python located in /usr/local/bin which is where the python2.5 installer for osX installs the links for python2.5 along with the dependencies. 