#summary Scorched Moon Server Manual
#labels Phase-Implementation

= Dependencies =
Scorched Moon requires python, we are planning to specifically work with python 3 however it will currently work with python 2 without problems.

= Launching Scorched Moon server = 
Scorched Moon server is designed to run as a standalone application independent of any clients. Simply running scorched_moon_server.py will start the server directly. Once started the server is non-interactive and can only be controlled by logging in remotely.

= Scorched Moon server arguments =
Scorched Moon accepts the following arguments on launch

==Argument List==
  * --debug or -d - enables debug mode, although argument can be entered debug mode has not been implemented yet.
  * --help or -h - Shows a list of arguments

= Scorched Moon server commands =
As the Scorched Moon server progresses testing will have many commands and responses a client will need to understand, the following is a list of all of the server commands and possible responses server can provide. Usage is the command, followed by any following variables %s represents a string, %i represents an integer. Planned commands and responses are obviously not inclusive and simply list those likely to be implemented relatively soon.


== Command List ==
These are the currently implemented server commands Scorched Moon accepts. All commands can be submitted directly through a telnet connection.

=== Currently implemented commands ===
  * exit - Disconnects user from server
  * shutdown - Cleanly shuts down server
  * broadcast %s - Sends a broadcast message to all clients, players do not need to be logged in to receive a broadcast

=== Currently planned commands ===
  * chat %s - sends %s as chat to select users
  * version - sends user current server version
  * login %s - logs player in with specified username


== Response List ==
These are the currently implemented responses the server can send to a client.

=== Currently implemented responses ===
  * broadcast %s - a chat message being sent to all clients
  * unknown %s - server received a command it didn't recognize
  * version %s - current server version number
  * disconnecting - server is disconnecting client

=== Currently planned responses ===
  * chat %s - a standard chat message
  * tchat %s - a chat specifically from a teammember in game
  * error %s - generic error message specified in string