#summary Design plans for Scorched Moon
#labels Phase-Design

= Reason for Scorched Moon =

MoonPy was created somewhat haphazardly by modifying openRTS into an ATS game similar to OMBC. Scorched Moon is going to be built from the ground up to make a game that is designed with the exact capabilities that we need.


= Design Plans =

Scorched Moon is going to be an online server only with no current plans to develop a client. While a compatible client would be nice, our only active coder can't program in a GUI to save his life and months have been wasted tying to develop a basic client. Because no progress was being made it is decided that we will make Scorched Moon fully playable without a client and consider creating an official client after Scorched Moon is considered stable. Communication will be through a standard 'telnet' style connection. The default interface will use the telnet curses or 'tcurses' library to allow players to play in an ascii environment with no other software besides a telnet client to play. Options will exist to allow the server to provide raw data as well for future compatibility with conventional clients.

== Server Design ==

Server will handle all game logic in Scorched Moon, this includes map data. The user will submit commands directly to the server. The server will process this data then send complete map data back to the user as either raw data or with tcurses. This includes FoW and SoW. By setting up the server this will it will not only allow people to play without a client but it will limit player cheating as only information that the player is supposed to know instead of all map data. 

== Map Ideas ==
To better fit OMBC the map will be a grid format. Each building will take a 2x2 section of the grid which each tether will take one. Each hub will be able to launch up to 12 tethers as shown in [http://code.google.com/p/tether/wiki/OMBCfacts OMBC facts]. I am thinking to simplify matters I will have the system calculate the shot when a command to fire is given and if the first tether spot is taken up with a tether from a previous shot then it will be denied. Because of how most terminal display text the width will be twice as wide as the height. So the display will skip every other character in a row which actually looks much better then having them all togther. Since the map will have to use ASCII I think that using upper case letters for buildings and lower case letters for disabled buildings is best option. Letter for each unit will match the first letter of the name of the unit. Since they are all unique this works well. Tethers however will be represented by a period since that will look less cluttered and more similar to OMBC.

* Hubs = H
* Tether = .
* Anti-Air = A
* Tower = T
* Energy Collector = E
* Offense = O
* Shield = S
* Crawler = Cc note: To help players better determine direction of crawlers this will be a two character long unit with an upper case C in the actual location where it is and a lower case C in the location directly after it to help indicate the direction it is going. 